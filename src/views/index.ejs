<!DOCTYPE html>
<html lang="en" xmlns="http://www.w3.org/1999/xhtml">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <link type="text/plain" rel="author" href="/humans.txt">
    <link rel="stylesheet" href="/assets/bootstrap-5.3.8-dist/css/bootstrap.min.css">


    <title>multiplayer.yoga</title>

    <!-- HTMX & Extras -->
    <script src="https://cdn.jsdelivr.net/npm/htmx.org@2.0.6"></script>
    <script src="https://cdn.jsdelivr.net/npm/htmx-ext-sse@2.2.2"></script>
    <script src="https://cdn.jsdelivr.net/npm/easy-speech@2.4.0/dist/EasySpeech.iife.min.js"></script>

    <!-- Alpine Plugins FIRST (inline, not defer!) -->
    <script src="https://cdn.jsdelivr.net/npm/@alpinejs/persist@3.14.9/dist/cdn.min.js"></script>

    <!-- Then Alpine itself (deferred) -->
    <script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.14.9/dist/cdn.min.js"></script>

    <!-- Model Viewer -->
    <script type="module" src="https://ajax.googleapis.com/ajax/libs/model-viewer/4.0.0/model-viewer.min.js"></script>

    <!-- Alpine Init -->
    <script>
        document.addEventListener('alpine:init', () => {
            Alpine.store('app', {
                activeTab: null,
                poseCount: 0,
                incrPoseCount() {
                    this.poseCount += 1
                },
                toggleTab(tabName) {
                    this.activeTab = this.activeTab === tabName ? null : tabName;
                },
            })
            Alpine.store('settings', {
                ttsEnabled: Alpine.$persist(true).using(sessionStorage),
                ttsVolume: Alpine.$persist(0.1).using(sessionStorage),
                ttsCounter: Alpine.$persist(false).using(sessionStorage),
                bgmEnabled: Alpine.$persist(true).using(sessionStorage),
                bgmVolume: Alpine.$persist(0.5).using(sessionStorage),
                howl: null
            });

            adjustBgm()

        });

    </script>


    <style>
        model-viewer#human {
            width: 100%;
            height: 100vh;
        }

        .title {
            position: absolute;
            bottom: 0;
            padding-left: 0.5rem;
        }
    </style>
</head>

<body x-data>

    <div class="">
        <div class="row">
            <div class="col-12 col-sm-8">
                <%# YOGA %>

                    <main hx-ext="sse" sse-connect="/events">


                        <div class="yoga">
                            <model-viewer id="human" src="/assets/man_12.gltf" animation-name="<%= initialPose.name %>"
                                alt="human" shadow-intensity="1" auto-rotate disable-zoom touch-action="pan-y"
                                environment-image="/assets/spruit_sunrise_1k_HDR.hdr" autoplay
                                camera-orbit="-45deg 80deg 6m" camera-target="0m 0.5m 0m"
                                animation-crossfade-duration="800"></model-viewer>

                            <h1 class="title" sse-swap="pose" data-pose="<%= JSON.stringify(initialPose) %>">
                                <%= initialPose.displayName %>
                            </h1>
                        </div>
                    </main>

            </div>
            <div class="col-12 col-md-4">
                <%# OPTIONS %>


                    <div class="p-4 text-body-secondary">
                        <p class="text-center">
                            multiplayer.yoga
                        </p>
                    </div>

                    <%# Settings %>
                        <div>

                            <div class=""></div>
                            <h2>Settings</h2>
                            <div class="card p-3 mb-4 shadow-sm">
                                <form>
                                    <!-- TTS Enable -->
                                    <div class="form-check mb-4">
                                        <input class="form-check-input" type="checkbox" id="ttsEnabled"
                                            x-model="$store.settings.ttsEnabled">
                                        <label class="form-check-label fw-bold" for="ttsEnabled">TTS</label>
                                    </div>

                                    <!-- TTS Volume -->
                                    <div class="mb-4" x-show="$store.settings.ttsEnabled">
                                        <label for="ttsVolume" class="form-label">TTS Volume</label>
                                        <input type="range" class="form-range" id="ttsVolume" min="0" max="1"
                                            step="0.001" x-model="$store.settings.ttsVolume">
                                    </div>

                                    <!-- TTS Pose Counter -->
                                    <div class="form-check mb-5" x-show="$store.settings.ttsEnabled">
                                        <input class="form-check-input" type="checkbox" id="ttsCounter"
                                            x-model="$store.settings.ttsCounter">
                                        <label class="form-check-label" for="ttsCounter">TTS Pose Counter</label>
                                    </div>

                                    <!-- Music Enable -->
                                    <div class="form-check mb-4">
                                        <input class="form-check-input" type="checkbox" id="bgmEnabled"
                                            x-model="$store.settings.bgmEnabled" @input.debounce="adjustBgm">
                                        <label class="form-check-label fw-bold" for="bgmEnabled">Music</label>
                                    </div>

                                    <!-- Music Volume -->
                                    <div class="mb-4" x-show="$store.settings.bgmEnabled">
                                        <label for="bgmVolume" class="form-label">Music Volume</label>
                                        <input type="range" class="form-range" id="bgmVolume" min="0" max="1"
                                            step="0.01" x-model="$store.settings.bgmVolume" @input.debounce="adjustBgm">
                                    </div>
                                </form>
                            </div>


                        </div>
            </div>
        </div>


        <div class="row text-center">
            <div class="container">

                <hr>
                <%# About %>
                    <div class="container">
                        <h1 class="mt-5">About</h1>
                        <p>multiplayer.yoga is a worldwide yoga experience.</p>

                        <p>Each pose lasts 42 seconds. All visitors see the same pose at the same time.
                        </p>

                        <p>There is no beginning, there is no end. Join any time and find your flow.</p>

                        <!-- <p>The live chat fosters connection. There are no logins, no usernames, no reputation to
                build. The focus
                here is presense. Share your positive thoughts, loving kindness, and
                encouragement to other yogis.</p> -->

                        <p>Poses are selected using a weighted random. The idea here is to provide a flow with
                            transitions that feel natural.</p>

                        <p>No streaks, no scores, no leaderboards. This isn't a game or a race, it's a space to build
                            focus, grow
                            stronger, and find calm.</p>
                    </div>

                    <div class="container">
                    <h1>Credits</h1>
                    <p>Music created by <a class="temphuibis" target="_blank"
                            href="https://linktr.ee/TEMPHUiBIS">TEMPHUiBIS</a></p>
                            </div>

                    <%# Author Panel %>
                        <div class="container mb-5">
                            <h1>Author</h1>
                            <p>Hi I'm <a target="_blank" href="https://grimtech.net">Chris Grimmett</a>, author of
                                multiplayer.yoga.
                                <img class="img-fluid" alt="Chris Grimmett, author of multiplayer.yoga"
                                    src="/assets/chris2.jpg">
                            </p>

                            <p>My dream is to support myself through building apps and websites that help people in
                                their daily lives.
                            </p>

                            <p>Feel free to send me an <a href="mailto:chris@grimtech.net">E-mail</a> if you have any
                                ideas or feedback.
                            </p>

                            <p>If you've found value here and want to support its continued growth, you can <a
                                    href="https://buymeacoffee.com/cgrimmett">buy me a coffee</a>. Every little bit
                                helps and is deeply
                                appreciated.</p>

                            <p>Thank you for being here.</p>




                        </div>
            </div>
        </div>
    </div>
    <div class="container">










        <%# Chat Panel %>
            <!--<div>


            <div class="logo-spacer"></div>
 
            <h2>Chat</h2>
            <div id="messages" sse-swap="message" hx-swap="beforeend">
            </div>

            <form id="chat-form" hx-post="/chat" hx-trigger="submit" hx-target="#messages" hx-swap="beforeend"
                hx-on::after-request="if(event.detail.successful) { this.reset() } else { alert('There was a problem submitting your message. Please try again.');    }">
                <input type="text" name="content" placeholder="Type a message..." required autocomplete="off" />
                <button class="btn" type="submit">Send</button>
            </form> 
        </div>-->













    </div>

    <script src="/assets/howler.js"></script>
    <script>

        function adjustBgm() {
            const settings = Alpine.store('settings');
            const { bgmVolume, bgmEnabled } = settings;
            let howl = settings.howl;

            if (!howl) {
                howl = new Howl({
                    src: ['/assets/TEMPHUiBIS - Dreamy Yoga.mp3'],
                    loop: true,
                    html5: true,
                    volume: settings.bgmVolume
                });
                settings.howl = howl; // <-- persist it
            }

            const isPlaying = howl.playing()


            if (bgmEnabled) {
                howl.volume(settings.bgmVolume);

                if (!isPlaying) {
                    howl.play();
                }
            } else {
                if (howl.playing()) {
                    howl.stop();
                }
            }

            howl.volume(bgmVolume);

        }



    </script>

    <script>
        // function updateAnimation(name) {
        // modelViewer.animationName = name
        // }

        // logger.info(modelViewer)

        EasySpeech.init({ maxTimeout: 5000, interval: 250 })
            .then(() => {
                console.debug('EasySpeech load complete')
            })
            .catch(e => logger.error(e))

        // SSE helpers
        document.body.addEventListener('htmx:sseMessage', function (e) {


            //logger.info('sseMessage has fired with e.detail.data as follows')
            //logger.info(e.detail.data) // => <div class="pose" data-pose="{" name":"mountain","displayName":"Mountain
            // Pose","difficulty":1}>Mountain Pose</div>

            const elt = e.detail.elt
            const el = elt.children[0]


            if (!el || !el.dataset.pose) {
                // the el might be a chat message so we dont handle it further
                return
            }

            let pose;
            try {
                // logger.info(el.dataset.pose)
                pose = JSON.parse(el.dataset.pose);
            } catch (err) {
                throw new Error(`Invalid JSON in data-pose. err=${err}`);
            }

            const vol = Number(Alpine.store('settings').ttsVolume);
            const count = Alpine.store('settings').ttsCounter ? Alpine.store('app').incrPoseCount() : 0
            const text = Alpine.store('settings').ttsCounter ? `${Alpine.store('app').poseCount} ${pose.displayName}` : pose.displayName

            // Check Alpine settings before speaking
            if (Alpine.store('settings').ttsEnabled) {
                EasySpeech.speak({
                    text,
                    pitch: 1,
                    rate: 0.8,
                    volume: vol,
                    boundary: e => console.debug('boundary reached')
                });
            }

            const modelViewer = document.querySelector('#human')
            modelViewer.animationName = pose.name;
        })



    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.8/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-FKyoEForCGlyvwx9Hj09JcYn3nv7wiPVlz7YYwJrWVcXK/BmnVDxM+D2scQbITxI"
        crossorigin="anonymous"></script>


</body>

</html>